{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation BLAH **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    "Mappings": {
        "RegionMap": {
            "ap-northeast-1": {
                "PRE": "pl-61a54008"
            },
            "ap-southeast-1": {
                "PRE": "pl-6fa54006"
            },
            "eu-west-1": {
                "PRE": "pl-6da54004"
            },
            "sa-east-1": {
                "PRE": "pl-6aa54003"
            },
            "us-east-1": {
                "PRE": "pl-63a5400a"
            },
            "us-east-2": {
                "PRE": "pl-7ba54012"
            },
            "us-west-1": {
                "PRE": "pl-6ba54002"
            },
            "us-west-2": {
                "PRE": "pl-68a54001"
            }
        }
    },
    "Outputs": {
        "AppALBSG": {
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "AppALBSG"
                        ]
                    ]
                }
            },
            "Value": {
                "Ref": "AppALBSG"
            }
        },
        "AppInstanceSG": {
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "AppInstanceSG"
                        ]
                    ]
                }
            },
            "Value": {
                "Ref": "AppInstanceSG"
            }
        },
        "BastionSG": {
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "BastionSG"
                        ]
                    ]
                }
            },
            "Value": {
                "Ref": "BastionHostSG"
            }
        },
        "DBSG": {
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "DBSG"
                        ]
                    ]
                }
            },
            "Value": {
                "Ref": "DBSG"
            }
        },
        "WebALBSG": {
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "WebALBSG"
                        ]
                    ]
                }
            },
            "Value": {
                "Ref": "WebALBSG"
            }
        },
        "WebInstanceSG": {
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "WebInstanceSG"
                        ]
                    ]
                }
            },
            "Value": {
                "Ref": "WebInstanceSG"
            }
        }
    },
    "Parameters": {
        "NetworkingStackName": {
            "Default": "Networking-Stack",
            "Description": "NetworkingStackName",
            "Type": "String"
        }
    },
    "Resources": {
        "AppALBEngress": {
            "Properties": {
                "Description": "App ALB Egress to App Instance",
                "DestinationSecurityGroupId": {
                    "Ref": "DBSG"
                },
                "FromPort": 8443,
                "GroupId": {
                    "Ref": "AppALBSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 8443
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "AppALBIngress": {
            "Properties": {
                "Description": "App ALB Ingress from App Instance",
                "FromPort": 443,
                "GroupId": {
                    "Ref": "AppALBSG"
                },
                "IpProtocol": "TCP",
                "SourceSecurityGroupId": {
                    "Ref": "WebInstanceSG"
                },
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "AppALBSG": {
            "Properties": {
                "GroupDescription": "Application Load Balancer Security Group",
                "GroupName": "App ALB SG",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkingStackName}-VPCId"
                    }
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "AppEngress1": {
            "Properties": {
                "Description": "App Server Egress to DB",
                "DestinationSecurityGroupId": {
                    "Ref": "DBSG"
                },
                "FromPort": 5432,
                "GroupId": {
                    "Ref": "AppInstanceSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 5432
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "AppEngress2": {
            "Properties": {
                "Description": "App Server Egress to S3 Endpoint",
                "DestinationPrefixListId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "PRE"
                    ]
                },
                "FromPort": 443,
                "GroupId": {
                    "Ref": "AppInstanceSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "AppEngress3": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "Description": "App Server Egress to everywhere port 80",
                "FromPort": 80,
                "GroupId": {
                    "Ref": "AppInstanceSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 80
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "AppIngress1": {
            "Properties": {
                "Description": "App Server Ingress from Internal Application Load Balancer",
                "FromPort": 8443,
                "GroupId": {
                    "Ref": "AppInstanceSG"
                },
                "IpProtocol": "TCP",
                "SourceSecurityGroupId": {
                    "Ref": "AppALBSG"
                },
                "ToPort": 8443
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "AppIngress2": {
            "Properties": {
                "Description": "App Server Ingress from Bastion Host",
                "FromPort": 22,
                "GroupId": {
                    "Ref": "AppInstanceSG"
                },
                "IpProtocol": "TCP",
                "SourceSecurityGroupId": {
                    "Ref": "BastionHostSG"
                },
                "ToPort": 22
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "AppInstanceSG": {
            "Properties": {
                "GroupDescription": "Application Instance Security Group",
                "GroupName": "App Instance SG",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkingStackName}-VPCId"
                    }
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "BastionHostEngressApp": {
            "Properties": {
                "Description": "Bastion Host Egress to Web Instances",
                "DestinationSecurityGroupId": {
                    "Ref": "AppInstanceSG"
                },
                "FromPort": 22,
                "GroupId": {
                    "Ref": "BastionHostSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 22
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "BastionHostEngressS3": {
            "Properties": {
                "Description": "Bastion Host Egress to S3",
                "DestinationPrefixListId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "PRE"
                    ]
                },
                "FromPort": 443,
                "GroupId": {
                    "Ref": "BastionHostSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "BastionHostEngressWeb": {
            "Properties": {
                "Description": "Bastion Host Egress to Web Instances",
                "DestinationSecurityGroupId": {
                    "Ref": "WebInstanceSG"
                },
                "FromPort": 22,
                "GroupId": {
                    "Ref": "BastionHostSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 22
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "BastionHostIngress": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "Description": "Bastion Host Ingress",
                "FromPort": 22,
                "GroupId": {
                    "Ref": "BastionHostSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 22
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "BastionHostSG": {
            "Properties": {
                "GroupDescription": "Bastion Host Security Group",
                "GroupName": "Bastion Host SG",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkingStackName}-VPCId"
                    }
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "DBIngress": {
            "Properties": {
                "Description": "db Ingress from app instance",
                "FromPort": 5432,
                "GroupId": {
                    "Ref": "DBSG"
                },
                "IpProtocol": "TCP",
                "SourceSecurityGroupId": {
                    "Ref": "AppInstanceSG"
                },
                "ToPort": 5432
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "DBSG": {
            "Properties": {
                "GroupDescription": "Database Security Group",
                "GroupName": "DB SG",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "127.0.0.1/32",
                        "IpProtocol": "-1"
                    }
                ],
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkingStackName}-VPCId"
                    }
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "WebALBEngress": {
            "Properties": {
                "Description": "Egress to Web Server",
                "DestinationSecurityGroupId": {
                    "Ref": "WebInstanceSG"
                },
                "FromPort": 443,
                "GroupId": {
                    "Ref": "WebALBSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "WebALBIngress": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "Description": "Opened Ingress",
                "FromPort": 443,
                "GroupId": {
                    "Ref": "WebALBSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "WebALBSG": {
            "Properties": {
                "GroupDescription": "ALB Security Group",
                "GroupName": "ALB SG",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkingStackName}-VPCId"
                    }
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "WebEngress1": {
            "Properties": {
                "Description": "Web Server Egress to Internal Application Load Balancer",
                "DestinationSecurityGroupId": {
                    "Ref": "AppALBSG"
                },
                "FromPort": 443,
                "GroupId": {
                    "Ref": "WebInstanceSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "WebEngress2": {
            "Properties": {
                "Description": "Web Server Egress to S3 Endpoint",
                "DestinationPrefixListId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "PRE"
                    ]
                },
                "FromPort": 443,
                "GroupId": {
                    "Ref": "WebInstanceSG"
                },
                "IpProtocol": "TCP",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupEgress"
        },
        "WebIngress1": {
            "Properties": {
                "Description": "Web Server Ingress from Web Application Load Balancer",
                "FromPort": 443,
                "GroupId": {
                    "Ref": "WebInstanceSG"
                },
                "IpProtocol": "TCP",
                "SourceSecurityGroupId": {
                    "Ref": "WebALBSG"
                },
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "WebIngress2": {
            "Properties": {
                "Description": "Web Server Ingress from Bastion Host",
                "FromPort": 22,
                "GroupId": {
                    "Ref": "WebInstanceSG"
                },
                "IpProtocol": "TCP",
                "SourceSecurityGroupId": {
                    "Ref": "BastionHostSG"
                },
                "ToPort": 22
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "WebInstanceSG": {
            "Properties": {
                "GroupDescription": "Web Instance Security Group",
                "GroupName": "Web Instance SG",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkingStackName}-VPCId"
                    }
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}